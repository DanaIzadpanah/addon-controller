---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clustersummaries.config.projectsveltos.io
spec:
  group: config.projectsveltos.io
  names:
    kind: ClusterSummary
    listKind: ClusterSummaryList
    plural: clustersummaries
    singular: clustersummary
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterSummary is the Schema for the clustersummaries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSummarySpec defines the desired state of ClusterSummary
            properties:
              clusterFeatureSpec:
                description: ClusterFeatureSpec represent the configuration that will
                  be applied to the workload cluster.
                properties:
                  clusterSelector:
                    description: ClusterSelector identifies ClusterAPI clusters to
                      associate to.
                    type: string
                  kyvernoConfiguration:
                    description: KyvernoConfiguration contains the Kyverno configuration.
                      If not nil, Kyverno will be deployed in the workload cluster
                      along with, if any, specified Kyverno policies.
                    properties:
                      policyRef:
                        description: PolicyRef references ConfigMaps containing the
                          Kyverno policies that need to be deployed in the workload
                          cluster.
                        items:
                          description: 'ObjectReference contains enough information
                            to let you inspect or modify the referred object. ---
                            New uses of this type are discouraged because of difficulty
                            describing its usage when embedded in APIs. 1. Ignored
                            fields.  It includes many fields which are not generally
                            honored.  For instance, ResourceVersion and FieldPath
                            are both very rarely valid in actual usage. 2. Invalid
                            usage help.  It is impossible to add specific help for
                            individual usage.  In most embedded usages, there are
                            particular restrictions like, "must refer only to types
                            A and B" or "UID not honored" or "name must be restricted".
                            Those cannot be well described when embedded. 3. Inconsistent
                            validation.  Because the usages are different, the validation
                            rules are different by usage, which makes it hard for
                            users to predict what will happen. 4. The fields are both
                            imprecise and overly precise.  Kind is not a precise mapping
                            to a URL. This can produce ambiguity during interpretation
                            and require a REST mapping.  In most cases, the dependency
                            is on the group,resource tuple and the version of the
                            actual struct is irrelevant. 5. We cannot easily change
                            it.  Because this type is embedded in many locations,
                            updates to this type will affect numerous schemas.  Don''t
                            make new APIs embed an underspecified API type they do
                            not control. Instead of using this type, create a locally
                            provided and used type that is well-focused on your reference.
                            For example, ServiceReferences for admission registration:
                            https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                            .'
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        type: array
                      replicas:
                        default: 1
                        description: Replicas is the number of kyverno replicas required
                        type: integer
                    type: object
                  syncMode:
                    default: OneTime
                    description: SyncMode specifies how features are synced in a matching
                      workload cluster. - OneTime means, first time a workload cluster
                      matches the ClusterFeature, features will be deployed in such
                      cluster. Any subsequent feature configuration change won't be
                      applied into the matching workload clusters; - Continuous means
                      first time a workload cluster matches the ClusterFeature, features
                      will be deployed in such a cluster. Any subsequent feature configuration
                      change will be applied into the matching workload clusters.
                    enum:
                    - OneTime
                    - Continuous
                    type: string
                  workloadRoleRefs:
                    description: WorkloadRoleRefs references all the WorkloadRoles
                      that will be used to create ClusterRole/Role in the workload
                      cluster.
                    items:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type: array
                required:
                - clusterSelector
                type: object
              clusterName:
                description: ClusterName is the name of the workload Cluster this
                  ClusterSummary is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the workload Cluster
                  this ClusterSummary is for.
                type: string
            required:
            - clusterName
            - clusterNamespace
            type: object
          status:
            description: ClusterSummaryStatus defines the observed state of ClusterSummary
            properties:
              clusterSummaries:
                description: FeatureSummaries reports the status of each workload
                  cluster feature directly managed by ClusterFeature.
                items:
                  description: FeatureSummary contains a summary of the state of a
                    workload cluster feature.
                  properties:
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    failureReason:
                      description: FailureReason indicates the type of error that
                        occurred.
                      type: string
                    featureID:
                      description: FeatureID is an indentifier of the feature whose
                        status is reported
                      enum:
                      - Kyverno
                      - Role
                      type: string
                    hash:
                      description: Hash represents of a unique value for a feature
                        at a fixed point in time
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - featureID
                  - status
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              policyPrefix:
                description: PolicyPrefix is the prefix added to policies deployed
                  by ClusterSummary instance in a CAPI Cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
